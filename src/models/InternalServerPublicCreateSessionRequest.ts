/* tslint:disable */
/* eslint-disable */
/**
 * Exeq API
 * Remote on-demand browser infrastructure platform API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@exeq.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InternalServerPublicCreateSessionRequest
 */
export interface InternalServerPublicCreateSessionRequest {
    /**
     * 
     * @type {string}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    duration?: string;
    /**
     * 
     * @type {string}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    profileId?: string;
    /**
     * 
     * @type {string}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    residentialProxyCity?: string;
    /**
     * 
     * @type {string}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    residentialProxyCountry?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    residentialProxyEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    residentialProxyState?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    sessionRecordingEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InternalServerPublicCreateSessionRequest
     */
    stealthModeEnabled?: boolean;
}

/**
 * Check if a given object implements the InternalServerPublicCreateSessionRequest interface.
 */
export function instanceOfInternalServerPublicCreateSessionRequest(value: object): value is InternalServerPublicCreateSessionRequest {
    return true;
}

export function InternalServerPublicCreateSessionRequestFromJSON(json: any): InternalServerPublicCreateSessionRequest {
    return InternalServerPublicCreateSessionRequestFromJSONTyped(json, false);
}

export function InternalServerPublicCreateSessionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalServerPublicCreateSessionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'duration': json['duration'] == null ? undefined : json['duration'],
        'profileId': json['profile_id'] == null ? undefined : json['profile_id'],
        'residentialProxyCity': json['residential_proxy_city'] == null ? undefined : json['residential_proxy_city'],
        'residentialProxyCountry': json['residential_proxy_country'] == null ? undefined : json['residential_proxy_country'],
        'residentialProxyEnabled': json['residential_proxy_enabled'] == null ? undefined : json['residential_proxy_enabled'],
        'residentialProxyState': json['residential_proxy_state'] == null ? undefined : json['residential_proxy_state'],
        'sessionRecordingEnabled': json['session_recording_enabled'] == null ? undefined : json['session_recording_enabled'],
        'stealthModeEnabled': json['stealth_mode_enabled'] == null ? undefined : json['stealth_mode_enabled'],
    };
}

export function InternalServerPublicCreateSessionRequestToJSON(json: any): InternalServerPublicCreateSessionRequest {
    return InternalServerPublicCreateSessionRequestToJSONTyped(json, false);
}

export function InternalServerPublicCreateSessionRequestToJSONTyped(value?: InternalServerPublicCreateSessionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'duration': value['duration'],
        'profile_id': value['profileId'],
        'residential_proxy_city': value['residentialProxyCity'],
        'residential_proxy_country': value['residentialProxyCountry'],
        'residential_proxy_enabled': value['residentialProxyEnabled'],
        'residential_proxy_state': value['residentialProxyState'],
        'session_recording_enabled': value['sessionRecordingEnabled'],
        'stealth_mode_enabled': value['stealthModeEnabled'],
    };
}

