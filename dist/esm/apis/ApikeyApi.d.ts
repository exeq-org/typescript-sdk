/**
 * Exeq API
 * Remote on-demand browser infrastructure platform API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@exeq.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { InternalServerPublicCreateSessionRequest, InternalServerPublicExtendSessionRequest, InternalServerPublicProfile, InternalServerPublicProfileList, InternalServerPublicSession, InternalServerPublicSessionList } from '../models/index';
export interface V1ProfilesIdGetRequest {
    id: string;
}
export interface V1SessionsGetRequest {
    limit?: number;
    offset?: number;
}
export interface V1SessionsIdDeleteRequest {
    id: string;
}
export interface V1SessionsIdExtendPostRequest {
    id: string;
    internalServerPublicExtendSessionRequest: InternalServerPublicExtendSessionRequest;
}
export interface V1SessionsIdGetRequest {
    id: string;
}
export interface V1SessionsPostRequest {
    internalServerPublicCreateSessionRequest: InternalServerPublicCreateSessionRequest;
}
/**
 *
 */
export declare class ApikeyApi extends runtime.BaseAPI {
    /**
     * Lists all browser profiles for the organization
     * List browser profiles
     */
    v1ProfilesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicProfileList>>;
    /**
     * Lists all browser profiles for the organization
     * List browser profiles
     */
    v1ProfilesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicProfileList>;
    /**
     * Retrieves details of a specific browser profile
     * Get browser profile
     */
    v1ProfilesIdGetRaw(requestParameters: V1ProfilesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicProfile>>;
    /**
     * Retrieves details of a specific browser profile
     * Get browser profile
     */
    v1ProfilesIdGet(requestParameters: V1ProfilesIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicProfile>;
    /**
     * Lists browser sessions with pagination
     * List browser sessions
     */
    v1SessionsGetRaw(requestParameters: V1SessionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicSessionList>>;
    /**
     * Lists browser sessions with pagination
     * List browser sessions
     */
    v1SessionsGet(requestParameters?: V1SessionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicSessionList>;
    /**
     * Stops an active browser session
     * Stop browser session
     */
    v1SessionsIdDeleteRaw(requestParameters: V1SessionsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string;
    }>>;
    /**
     * Stops an active browser session
     * Stop browser session
     */
    v1SessionsIdDelete(requestParameters: V1SessionsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string;
    }>;
    /**
     * Extends the duration of an active browser session
     * Extend session duration
     */
    v1SessionsIdExtendPostRaw(requestParameters: V1SessionsIdExtendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicSession>>;
    /**
     * Extends the duration of an active browser session
     * Extend session duration
     */
    v1SessionsIdExtendPost(requestParameters: V1SessionsIdExtendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicSession>;
    /**
     * Retrieves details of a specific browser session
     * Get browser session
     */
    v1SessionsIdGetRaw(requestParameters: V1SessionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicSession>>;
    /**
     * Retrieves details of a specific browser session
     * Get browser session
     */
    v1SessionsIdGet(requestParameters: V1SessionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicSession>;
    /**
     * Creates a new browser session
     * Create browser session
     */
    v1SessionsPostRaw(requestParameters: V1SessionsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InternalServerPublicSession>>;
    /**
     * Creates a new browser session
     * Create browser session
     */
    v1SessionsPost(requestParameters: V1SessionsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InternalServerPublicSession>;
}
